{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.is-integer.js\";\nexport default {\n  name: \"Message\",\n  props: {\n    msg: {\n      type: [Number, String],\n      // Aceita tanto números quanto strings\n      required: true\n    }\n  },\n  methods: {\n    isInteger: function isInteger(value) {\n      // Verifica se o valor pode ser convertido para um número inteiro\n      return Number.isInteger(Number(value));\n    }\n  }\n};","map":{"version":3,"names":["name","props","msg","type","Number","String","required","methods","isInteger","value"],"sources":["C:\\xampp\\htdocs\\build_your_burger\\src\\components\\Message.vue"],"sourcesContent":["<template>\r\n    <div class=\"message-container\">\r\n        <p v-if=\"isInteger(msg)\">{{ msg }}</p>\r\n        <p v-else>Formato inválido para número inteiro</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Message\",\r\n    props: {\r\n        msg: {\r\n            type: [Number, String], // Aceita tanto números quanto strings\r\n            required: true\r\n        }\r\n    },\r\n    methods: {\r\n        isInteger(value) {\r\n            // Verifica se o valor pode ser convertido para um número inteiro\r\n            return Number.isInteger(Number(value));\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .message-container {\r\n        color: #004885;\r\n        background-color: #CCE5FF;\r\n        border: 2px solid #88DAFF;\r\n        border-radius: 5px;\r\n        padding: 10px;\r\n        max-width: 400px;\r\n        margin: 30px auto;\r\n    }\r\n</style>\r\n"],"mappings":";;AAQA,eAAe;EACXA,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE;IACHC,GAAG,EAAE;MACDC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,CAAC;MAAE;MACxBC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,SAAS,WAAAA,UAACC,KAAK,EAAE;MACb;MACA,OAAOL,MAAM,CAACI,SAAS,CAACJ,MAAM,CAACK,KAAK,CAAC,CAAC;IAC1C;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}