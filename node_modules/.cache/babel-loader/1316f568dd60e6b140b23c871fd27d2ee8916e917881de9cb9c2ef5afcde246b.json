{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/build_your_burger/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/build_your_burger/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nexport default {\n  name: \"Dashboard\",\n  data: function data() {\n    return {\n      burgers: null,\n      burger_id: null,\n      status: [],\n      ingredientes: {\n        paes: [{\n          id: 1,\n          tipo: \"Italiano Branco\"\n        }, {\n          id: 2,\n          tipo: \"3 Queijos\"\n        }, {\n          id: 3,\n          tipo: \"Parmesão e Orégano\"\n        }, {\n          id: 4,\n          tipo: \"Integral\"\n        }],\n        carnes: [{\n          id: 1,\n          tipo: \"Maminha\"\n        }, {\n          id: 2,\n          tipo: \"Alcatra\"\n        }, {\n          id: 3,\n          tipo: \"Picanha\"\n        }, {\n          id: 4,\n          tipo: \"Veggie burger\"\n        }]\n      }\n    };\n  },\n  methods: {\n    getPedidos: function getPedidos() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var req, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:3000/burgers');\n            case 2:\n              req = _context.sent;\n              _context.next = 5;\n              return req.json();\n            case 5:\n              data = _context.sent;\n              // Para cada hambúrguer, encontrar o tipo de pão e carne\n              data.forEach(function (burger) {\n                burger.pao = _this.tipoPao(burger.pao);\n                burger.carne = _this.tipoCarne(burger.carne);\n              });\n              _this.burgers = data;\n              _this.getStatus();\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    getStatus: function getStatus() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var req, data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('http://localhost:3000/status');\n            case 2:\n              req = _context2.sent;\n              _context2.next = 5;\n              return req.json();\n            case 5:\n              data = _context2.sent;\n              _this2.status = data;\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    deleteBurger: function deleteBurger(id) {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var req, res;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(\"http://localhost:3000/burgers/\".concat(id), {\n                method: \"DELETE\"\n              });\n            case 2:\n              req = _context3.sent;\n              _context3.next = 5;\n              return req.json();\n            case 5:\n              res = _context3.sent;\n              _this3.getPedidos();\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    updateBurger: function updateBurger(event, id) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var option, dataJson, req, res;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              option = event.target.value;\n              dataJson = JSON.stringify({\n                status: option\n              });\n              _context4.next = 4;\n              return fetch(\"http://localhost:3000/burgers/\".concat(id), {\n                method: \"PATCH\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: dataJson\n              });\n            case 4:\n              req = _context4.sent;\n              _context4.next = 7;\n              return req.json();\n            case 7:\n              res = _context4.sent;\n              console.log(res);\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    }\n  },\n  computed: {\n    tipoPao: function tipoPao() {\n      var _this4 = this;\n      return function (paoId) {\n        var pao = _this4.ingredientes.paes.find(function (p) {\n          return p.id === paoId;\n        });\n        return pao ? pao.tipo : \"Pão não especificado\";\n      };\n    },\n    tipoCarne: function tipoCarne() {\n      var _this5 = this;\n      return function (carneId) {\n        var carne = _this5.ingredientes.carnes.find(function (c) {\n          return c.id === carneId;\n        });\n        return carne ? carne.tipo : \"Carne não especificada\";\n      };\n    }\n  },\n  mounted: function mounted() {\n    this.getPedidos();\n  }\n};","map":{"version":3,"names":["name","data","burgers","burger_id","status","ingredientes","paes","id","tipo","carnes","methods","getPedidos","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","req","wrap","_callee$","_context","prev","next","fetch","sent","json","forEach","burger","pao","tipoPao","carne","tipoCarne","getStatus","stop","_this2","_callee2","_callee2$","_context2","deleteBurger","_this3","_callee3","res","_callee3$","_context3","concat","method","updateBurger","event","_callee4","option","dataJson","_callee4$","_context4","target","value","JSON","stringify","headers","body","console","log","computed","_this4","paoId","find","p","_this5","carneId","c","mounted"],"sources":["C:\\xampp\\htdocs\\build_your_burger\\src\\components\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div id=\"burger-table\" v-if=\"burgers\">\r\n    <div>\r\n      <div id=\"burger-table-heading\">\r\n        <div class=\"order-id\">#:</div>\r\n        <div>Cliente:</div>\r\n        <div>Pão:</div>\r\n        <div>Carne:</div>\r\n        <div>Opcionais:</div>\r\n        <div>Ações:</div>\r\n      </div>\r\n    </div>\r\n    <div id=\"burger-table-rows\">\r\n      <div class=\"burger-table-row\" v-for=\"burger in burgers\" :key=\"burger.id\">\r\n        <div class=\"order-number\">{{ burger.id }}</div>\r\n        <div>{{ burger.nome }}</div>\r\n        <div>{{ tipoPao(burger.pao) }}</div>\r\n        <div>{{ tipoCarne(burger.carne) }}</div>\r\n        <div>\r\n          <ul v-for=\"(opcional, index) in burger.opcionais\" :key=\"index\">\r\n            <li>{{ opcional }}</li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <select name=\"status\" class=\"status\" @change=\"updateBurger($event, burger.id)\">\r\n            <option :value=\"s.tipo\" v-for=\"s in status\" :key=\"s.id\" :selected=\"burger.status == s.tipo\">\r\n              {{ s.tipo }}\r\n            </option>\r\n          </select>\r\n          <button class=\"delete-btn\" @click=\"deleteBurger(burger.id)\">Cancelar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Dashboard\",\r\n  data() {\r\n    return {\r\n      burgers: null,\r\n      burger_id: null,\r\n      status: [],\r\n      ingredientes: {\r\n        paes: [\r\n          { id: 1, tipo: \"Italiano Branco\" },\r\n          { id: 2, tipo: \"3 Queijos\" },\r\n          { id: 3, tipo: \"Parmesão e Orégano\" },\r\n          { id: 4, tipo: \"Integral\" }\r\n        ],\r\n        carnes: [\r\n          { id: 1, tipo: \"Maminha\" },\r\n          { id: 2, tipo: \"Alcatra\" },\r\n          { id: 3, tipo: \"Picanha\" },\r\n          { id: 4, tipo: \"Veggie burger\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async getPedidos() {\r\n      const req = await fetch('http://localhost:3000/burgers');\r\n      const data = await req.json();\r\n      \r\n      // Para cada hambúrguer, encontrar o tipo de pão e carne\r\n      data.forEach(burger => {\r\n        burger.pao = this.tipoPao(burger.pao);\r\n        burger.carne = this.tipoCarne(burger.carne);\r\n      });\r\n\r\n      this.burgers = data;\r\n      this.getStatus();\r\n    },\r\n    async getStatus() {\r\n      const req = await fetch('http://localhost:3000/status');\r\n      const data = await req.json();\r\n      this.status = data;\r\n    },\r\n    async deleteBurger(id) {\r\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      const res = await req.json();\r\n      this.getPedidos();\r\n    },\r\n    async updateBurger(event, id) {\r\n      const option = event.target.value;\r\n      const dataJson = JSON.stringify({ status: option });\r\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: dataJson\r\n      });\r\n      const res = await req.json();\r\n      console.log(res);\r\n    }\r\n  },\r\n  computed: {\r\n    tipoPao() {\r\n      return (paoId) => {\r\n        const pao = this.ingredientes.paes.find(p => p.id === paoId);\r\n        return pao ? pao.tipo : \"Pão não especificado\";\r\n      };\r\n    },\r\n    tipoCarne() {\r\n      return (carneId) => {\r\n        const carne = this.ingredientes.carnes.find(c => c.id === carneId);\r\n        return carne ? carne.tipo : \"Carne não especificada\";\r\n      };\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getPedidos();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#burger-table {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n#burger-table-heading,\r\n#burger-table-rows,\r\n.burger-table-row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n#burger-table-heading {\r\n  font-weight: bold;\r\n  padding: 12px;\r\n  border-bottom: 3px solid #333;\r\n}\r\n\r\n.burger-table-row {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-bottom: 1px solid #CCC;\r\n}\r\n\r\n#burger-table-heading div,\r\n.burger-table-row div {\r\n  width: 19%;\r\n}\r\n\r\n#burger-table-heading .order-id,\r\n.burger-table-row .order-number {\r\n  width: 5%;\r\n}\r\n\r\nselect {\r\n  padding: 12px 6px;\r\n  margin-right: 12px;\r\n}\r\n\r\n.delete-btn {\r\n  background-color: #222;\r\n  color: #fcba03;\r\n  font-weight: bold;\r\n  border: 2px solid #222;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  margin: 0 auto;\r\n  cursor: pointer;\r\n  transition: .5s;\r\n}\r\n\r\n.delete-btn:hover {\r\n  background-color: transparent;\r\n  color: #222;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}