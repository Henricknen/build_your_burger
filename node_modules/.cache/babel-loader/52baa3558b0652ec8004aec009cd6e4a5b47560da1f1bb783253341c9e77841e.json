{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/build_your_burger/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/build_your_burger/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport Message from './Message.vue';\nexport default {\n  name: \"BugerForm\",\n  data: function data() {\n    return {\n      paes: null,\n      carnes: null,\n      opcionaisdata: null,\n      nome: null,\n      pao: null,\n      carne: null,\n      opcionais: [],\n      msg: null\n    };\n  },\n  methods: {\n    getIngredientes: function getIngredientes() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var req, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:3000/ingredientes\");\n            case 2:\n              req = _context.sent;\n              _context.next = 5;\n              return req.json();\n            case 5:\n              data = _context.sent;\n              _this.paes = data.paes;\n              _this.carnes = data.carnes;\n              _this.opcionaisdata = data.opcionais;\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    createBurger: function createBurger(e) {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var data, dataJson, req, res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              data = {\n                nome: _this2.nome,\n                carne: _this2.carne,\n                pao: _this2.pao,\n                opcionais: Array.from(_this2.opcionais),\n                status: \"solicitado\"\n              };\n              dataJson = JSON.stringify(data);\n              _context2.next = 5;\n              return fetch(\"http://localhost:3000/burgers\", {\n                method: \"POST\",\n                headers: {\n                  \"content-Type\": \"application/json\"\n                },\n                body: dataJson\n              });\n            case 5:\n              req = _context2.sent;\n              _context2.next = 8;\n              return req.json();\n            case 8:\n              res = _context2.sent;\n              // colocar uma msg de sistema\n\n              _this2.nome = \"\";\n              _this2.carne = \"\";\n              _this2.pao = \"\";\n              _this2.opcionais = \"\";\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.getIngredientes();\n  }\n};","map":{"version":3,"names":["Message","name","data","paes","carnes","opcionaisdata","nome","pao","carne","opcionais","msg","methods","getIngredientes","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","req","wrap","_callee$","_context","prev","next","fetch","sent","json","stop","createBurger","e","_this2","_callee2","dataJson","res","_callee2$","_context2","preventDefault","Array","from","status","JSON","stringify","method","headers","body","mounted"],"sources":["C:\\xampp\\htdocs\\build_your_burger\\src\\components\\BurgerForm.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <Message />\r\n        <div>\r\n            <form id = \"burger-form\" @submit = \"createBurger\">\r\n                <div class = \"input-container\">\r\n                    <label for = \"nome\">Nome do cliente:</label>\r\n                    <input type = \"text\" id = \"nome\" neme = \"nome\" v-model = \"nome\" placeholder = \"Digite seu nome\">\r\n                </div>\r\n                <div class = \"input-container\">\r\n                    <label for = \"pao\">Escolha o pão:</label>\r\n                    <select name = \"pao\" id=\"pao\">\r\n                        <option value = \"\">Seleçione o seu pão</option>\r\n                        <option v-for = \"pao in paes\" :key = \"pao.id\" :value = \"pao.tipo\">\r\n                            {{ pao.tipo }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div class = \"input-container\">\r\n                    <label for = \"carne\">Escolha a carne do seu Burger:</label>\r\n                    <select name = \"carne\" id=\"carne\">\r\n                        <option value = \"\">Seleçione o tipo de carne</option>\r\n                        <option v-for = \"carne in carnes\" :key = \"carne.id\" :value = \"carne.tipo\">\r\n                            {{ carne.tipo }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div id = \"opcionais-container\" class = \"input-container\">\r\n                    <label id = \"opcionais-title\" for = \"opcionais\">Seleçione os opcionais:</label>\r\n                    <div class = \"checkbox-container\" v-for = \"opcional in opcionaisdata\" :key = \"opcional.id\">\r\n                        <input type = \"checkbox\" name = \"opcionais\" v-model = \"opcionais\" value = \"opcional.tipo\">\r\n                        <span>{{ opcional.tipo }}</span>\r\n                    </div>                    \r\n                </div>\r\n                <div class = \"input-container\">\r\n                    <input type = \"submit\" class = \"submit-btn\" value = \"Criar meu Burguer!\">\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Message from './Message.vue';\r\n\r\nexport default {\r\n    name: \"BugerForm\",\r\n    data() {\r\n        return {\r\n            paes: null,\r\n            carnes: null,\r\n            opcionaisdata: null,\r\n            nome: null,\r\n            pao: null,\r\n            carne: null,\r\n            opcionais: [],            \r\n            msg: null\r\n        }\r\n    },\r\n    methods: {\r\n        async getIngredientes() {\r\n\r\n            const req = await fetch(\"http://localhost:3000/ingredientes\");\r\n            const data = await req.json();\r\n\r\n            this.paes = data.paes;\r\n            this.carnes = data.carnes;\r\n            this.opcionaisdata = data.opcionais;\r\n\r\n        },\r\n        async createBurger(e) {\r\n            e.preventDefault();\r\n\r\n            const data = {\r\n                nome: this.nome,\r\n                carne: this.carne,\r\n                pao: this.pao,\r\n                opcionais: Array.from(this.opcionais),\r\n                status: \"solicitado\",\r\n            }\r\n\r\n            const dataJson = JSON.stringify(data);\r\n\r\n            const req = await fetch(\"http://localhost:3000/burgers\", {\r\n                method: \"POST\",\r\n                headers: {\"content-Type\": \"application/json\"},\r\n                body: dataJson\r\n            });\r\n\r\n            const res = await req.json(); \r\n\r\n            // colocar uma msg de sistema\r\n\r\n            this.nome = \"\";\r\n            this.carne = \"\";\r\n            this.pao = \"\";\r\n            this.opcionais = \"\";\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getIngredientes()\r\n    },\r\n    \r\n}\r\n</script>\r\n <style scoped>\r\n    #burger-form {\r\n        max-width: 400px;\r\n        margin: 0 auto;\r\n    }\r\n\r\n    .input-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    label {\r\n        font-weight: bold;\r\n        margin-bottom: 15px;\r\n        color: #222;\r\n        padding: 5px 10px;\r\n        border-left: 4px solid #FCBA03;\r\n    }\r\n\r\n    input, select {\r\n        padding: 5px 10px;\r\n        width: 300px;\r\n    }\r\n\r\n    #opcionais-container {\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    #opcionais-title {\r\n        width: 100%;\r\n    }\r\n\r\n    .checkbox-container {\r\n        display: flex;\r\n        align-items: flex-start;\r\n        width: 50%;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .checkbox-container span,\r\n    .checkbox-container input {\r\n        width: auto;\r\n    }\r\n\r\n    .checkbox-container span {\r\n        margin-left: 6px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .submit-btn {\r\n        background-color: #222;\r\n        color: #FCBA03;\r\n        font-weight: bold;\r\n        border: 2px solid #222;\r\n        padding: 10px;\r\n        font-size: 16px;\r\n        /* margin: 0 auto; */\r\n        cursor: pointer;\r\n        transition: .5s;\r\n    }\r\n\r\n    .submit-btn:hover {\r\n        background-color: transparent;\r\n        color: #222;\r\n    }\r\n\r\n </style>"],"mappings":";;;;;;;AA2CA,OAAOA,OAAM,MAAO,eAAe;AAEnC,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,IAAI,WAAAA,KAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE,IAAI;MACVC,MAAM,EAAE,IAAI;MACZC,aAAa,EAAE,IAAI;MACnBC,IAAI,EAAE,IAAI;MACVC,GAAG,EAAE,IAAI;MACTC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,EAAE;MACbC,GAAG,EAAE;IACT;EACJ,CAAC;EACDC,OAAO,EAAE;IACCC,eAAe,WAAAA,gBAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,GAAA,EAAAhB,IAAA;QAAA,OAAAa,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OAEFC,KAAK,CAAC,oCAAoC,CAAC;YAAA;cAAvDN,GAAE,GAAAG,QAAA,CAAAI,IAAA;cAAAJ,QAAA,CAAAE,IAAA;cAAA,OACWL,GAAG,CAACQ,IAAI,CAAC,CAAC;YAAA;cAAvBxB,IAAG,GAAAmB,QAAA,CAAAI,IAAA;cAETZ,KAAI,CAACV,IAAG,GAAID,IAAI,CAACC,IAAI;cACrBU,KAAI,CAACT,MAAK,GAAIF,IAAI,CAACE,MAAM;cACzBS,KAAI,CAACR,aAAY,GAAIH,IAAI,CAACO,SAAS;YAAA;YAAA;cAAA,OAAAY,QAAA,CAAAM,IAAA;UAAA;QAAA,GAAAV,OAAA;MAAA;IAEvC,CAAC;IACKW,YAAY,WAAAA,aAACC,CAAC,EAAE;MAAA,IAAAC,MAAA;MAAA,OAAAhB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAe,SAAA;QAAA,IAAA7B,IAAA,EAAA8B,QAAA,EAAAd,GAAA,EAAAe,GAAA;QAAA,OAAAlB,mBAAA,GAAAI,IAAA,UAAAe,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAb,IAAA,GAAAa,SAAA,CAAAZ,IAAA;YAAA;cAClBM,CAAC,CAACO,cAAc,CAAC,CAAC;cAEZlC,IAAG,GAAI;gBACTI,IAAI,EAAEwB,MAAI,CAACxB,IAAI;gBACfE,KAAK,EAAEsB,MAAI,CAACtB,KAAK;gBACjBD,GAAG,EAAEuB,MAAI,CAACvB,GAAG;gBACbE,SAAS,EAAE4B,KAAK,CAACC,IAAI,CAACR,MAAI,CAACrB,SAAS,CAAC;gBACrC8B,MAAM,EAAE;cACZ;cAEMP,QAAO,GAAIQ,IAAI,CAACC,SAAS,CAACvC,IAAI,CAAC;cAAAiC,SAAA,CAAAZ,IAAA;cAAA,OAEnBC,KAAK,CAAC,+BAA+B,EAAE;gBACrDkB,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE;kBAAC,cAAc,EAAE;gBAAkB,CAAC;gBAC7CC,IAAI,EAAEZ;cACV,CAAC,CAAC;YAAA;cAJId,GAAE,GAAAiB,SAAA,CAAAV,IAAA;cAAAU,SAAA,CAAAZ,IAAA;cAAA,OAMUL,GAAG,CAACQ,IAAI,CAAC,CAAC;YAAA;cAAtBO,GAAE,GAAAE,SAAA,CAAAV,IAAA;cAER;;cAEAK,MAAI,CAACxB,IAAG,GAAI,EAAE;cACdwB,MAAI,CAACtB,KAAI,GAAI,EAAE;cACfsB,MAAI,CAACvB,GAAE,GAAI,EAAE;cACbuB,MAAI,CAACrB,SAAQ,GAAI,EAAE;YAAA;YAAA;cAAA,OAAA0B,SAAA,CAAAR,IAAA;UAAA;QAAA,GAAAI,QAAA;MAAA;IACvB;EACJ,CAAC;EACDc,OAAO,WAAAA,QAAA,EAAG;IACN,IAAI,CAACjC,eAAe,CAAC;EACzB;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}