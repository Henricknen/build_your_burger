{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/build_your_burger/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/xampp/build_your_burger/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport Message from './Message';\nexport default {\n  name: \"BurgerForm\",\n  data: function data() {\n    return {\n      paes: null,\n      carnes: null,\n      opcionaisdata: null,\n      nome: null,\n      pao: null,\n      carne: null,\n      opcionais: [],\n      msg: null\n    };\n  },\n  methods: {\n    getIngredientes: function getIngredientes() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var req, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:3000/ingredientes');\n            case 2:\n              req = _context.sent;\n              _context.next = 5;\n              return req.json();\n            case 5:\n              data = _context.sent;\n              _this.paes = data.paes;\n              _this.carnes = data.carnes;\n              _this.opcionaisdata = data.opcionais;\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    createBurger: function createBurger(e) {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var data, dataJson, req, res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              data = {\n                nome: _this2.nome,\n                carne: _this2.carne,\n                pao: _this2.pao,\n                opcionais: Array.from(_this2.opcionais),\n                status: \"Solicitado\"\n              };\n              dataJson = JSON.stringify(data);\n              _context2.next = 5;\n              return fetch(\"http://localhost:3000/burgers\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: dataJson\n              });\n            case 5:\n              req = _context2.sent;\n              _context2.next = 8;\n              return req.json();\n            case 8:\n              res = _context2.sent;\n              console.log(res);\n              _this2.msg = \"Pedido realizado com sucesso!\";\n\n              // clear message\n              setTimeout(function () {\n                return _this2.msg = \"\";\n              }, 3000);\n\n              // limpar campos\n              _this2.nome = \"\";\n              _this2.carne = \"\";\n              _this2.pao = \"\";\n              _this2.opcionais = [];\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.getIngredientes();\n  },\n  components: {\n    Message: Message\n  }\n};","map":{"version":3,"names":["Message","name","data","paes","carnes","opcionaisdata","nome","pao","carne","opcionais","msg","methods","getIngredientes","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","req","wrap","_callee$","_context","prev","next","fetch","sent","json","stop","createBurger","e","_this2","_callee2","dataJson","res","_callee2$","_context2","preventDefault","Array","from","status","JSON","stringify","method","headers","body","console","log","setTimeout","mounted","components"],"sources":["C:\\xampp\\build_your_burger\\src\\components\\BurgerForm.vue"],"sourcesContent":["<template>\r\n  <Message :msg=\"msg\" v-show=\"msg\" />\r\n  <div>\r\n    <form id=\"burger-form\" method=\"POST\" @submit=\"createBurger\">\r\n      <div class=\"input-container\">\r\n        <label for=\"nome\">Nome do cliente:</label>\r\n        <input type=\"text\" id=\"nome\" name=\"nome\" v-model=\"nome\" placeholder=\"Digite o seu nome\">\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <label for=\"pao\">Escolha o pão:</label>\r\n        <select name=\"pao\" id=\"pao\" v-model=\"pao\">\r\n          <option value=\"\">Selecione o seu pão</option>\r\n          <option v-for=\"pao in paes\" :key=\"pao.id\" :value=\"pao.tipo\">{{ pao.tipo }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <label for=\"carne\">Escolha a carne do seu Burger:</label>\r\n        <select name=\"carne\" id=\"carne\" v-model=\"carne\">\r\n          <option value=\"\">Selecione o tipo de carne</option>\r\n          <option v-for=\"carne in carnes\" :key=\"carne.id\" :value=\"carne.tipo\">{{ carne.tipo }}</option>\r\n        </select>\r\n      </div>\r\n      <div id=\"opcionais-container\" class=\"input-container\">\r\n        <label id=\"opcionais-title\" for=\"opcionais\">Selecione os opcionais:</label>\r\n        <div class=\"checkbox-container\" v-for=\"opcional in opcionaisdata\" :key=\"opcional.id\">\r\n          <input type=\"checkbox\" name=\"opcionais\" v-model=\"opcionais\" :value=\"opcional.tipo\">\r\n          <span>{{ opcional.tipo }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <input class=\"submit-btn\" type=\"submit\" value=\"Criar meu Burger!\">\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Message from './Message'\r\n\r\nexport default {\r\n  name: \"BurgerForm\",\r\n  data() {\r\n    return {\r\n      paes: null,\r\n      carnes: null,\r\n      opcionaisdata: null,\r\n      nome: null,\r\n      pao: null,\r\n      carne: null,\r\n      opcionais: [],\r\n      msg: null\r\n    }\r\n  },\r\n  methods: {\r\n    async getIngredientes() {\r\n      const req = await fetch('http://localhost:3000/ingredientes');\r\n      const data = await req.json()\r\n\r\n      this.paes = data.paes\r\n      this.carnes = data.carnes\r\n      this.opcionaisdata = data.opcionais\r\n    },\r\n    async createBurger(e) {\r\n\r\n      e.preventDefault();\r\n\r\n      const data = {\r\n        nome: this.nome,\r\n        carne: this.carne,\r\n        pao: this.pao,\r\n        opcionais: Array.from(this.opcionais),\r\n        status: \"Solicitado\"\r\n      }\r\n\r\n      const dataJson = JSON.stringify(data)    \r\n\r\n      const req = await fetch(\"http://localhost:3000/burgers\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\" : \"application/json\" },\r\n        body: dataJson\r\n      });\r\n\r\n      const res = await req.json()\r\n\r\n      console.log(res)\r\n\r\n      this.msg = \"Pedido realizado com sucesso!\"\r\n\r\n      // clear message\r\n      setTimeout(() => this.msg = \"\", 3000)\r\n\r\n      // limpar campos\r\n      this.nome = \"\"\r\n      this.carne = \"\"\r\n      this.pao = \"\"\r\n      this.opcionais = []\r\n      \r\n    }\r\n  },\r\n  mounted () {\r\n    this.getIngredientes()\r\n  },\r\n  components: {\r\n    Message\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  #burger-form {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .input-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  label {\r\n    font-weight: bold;\r\n    margin-bottom: 15px;\r\n    color: #222;;\r\n    padding: 5px 10px;\r\n    border-left: 4px solid #fcba03;\r\n  }\r\n\r\n  input, select {\r\n    padding: 5px 10px;\r\n    width: 300px;\r\n  }\r\n\r\n  #opcionais-container {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  #opcionais-title {\r\n    width: 100%;\r\n  }\r\n\r\n  .checkbox-container {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    width: 50%;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .checkbox-container span,\r\n  .checkbox-container input {\r\n    width: auto;\r\n  }\r\n\r\n  .checkbox-container span {\r\n    margin-left: 6px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .submit-btn {\r\n    background-color: #222;\r\n    color:#fcba03;\r\n    font-weight: bold;\r\n    border: 2px solid #222;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    margin: 0 auto;\r\n    cursor: pointer;\r\n    transition: .5s;\r\n  }\r\n\r\n  .submit-btn:hover {\r\n    background-color: transparent;\r\n    color: #222;\r\n  }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}