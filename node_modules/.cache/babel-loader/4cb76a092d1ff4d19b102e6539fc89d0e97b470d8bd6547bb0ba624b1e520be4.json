{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/build_your_burger/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/build_your_burger/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  name: \"Dashboard\",\n  data: function data() {\n    return {\n      burgers: null,\n      burger_id: null,\n      status: [],\n      ingredientes: {\n        paes: [{\n          id: 1,\n          tipo: \"Italiano Branco\"\n        }, {\n          id: 2,\n          tipo: \"3 Queijos\"\n        }, {\n          id: 3,\n          tipo: \"Parmesão e Orégano\"\n        }, {\n          id: 4,\n          tipo: \"Integral\"\n        }],\n        carnes: [{\n          id: 1,\n          tipo: \"Maminha\"\n        }, {\n          id: 2,\n          tipo: \"Alcatra\"\n        }, {\n          id: 3,\n          tipo: \"Picanha\"\n        }, {\n          id: 4,\n          tipo: \"Veggie burger\"\n        }]\n      }\n    };\n  },\n  methods: {\n    getPedidos: function getPedidos() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var req, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:3000/burgers');\n            case 2:\n              req = _context.sent;\n              _context.next = 5;\n              return req.json();\n            case 5:\n              data = _context.sent;\n              _this.burgers = data;\n              _this.getStatus();\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    getStatus: function getStatus() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var req, data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('http://localhost:3000/status');\n            case 2:\n              req = _context2.sent;\n              _context2.next = 5;\n              return req.json();\n            case 5:\n              data = _context2.sent;\n              _this2.status = data;\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    deleteBurger: function deleteBurger(id) {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var req, res;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(\"http://localhost:3000/burgers/\".concat(id), {\n                method: \"DELETE\"\n              });\n            case 2:\n              req = _context3.sent;\n              _context3.next = 5;\n              return req.json();\n            case 5:\n              res = _context3.sent;\n              _this3.getPedidos();\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    updateBurger: function updateBurger(event, id) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var option, dataJson, req, res;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              option = event.target.value;\n              dataJson = JSON.stringify({\n                status: option\n              });\n              _context4.next = 4;\n              return fetch(\"http://localhost:3000/burgers/\".concat(id), {\n                method: \"PATCH\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: dataJson\n              });\n            case 4:\n              req = _context4.sent;\n              _context4.next = 7;\n              return req.json();\n            case 7:\n              res = _context4.sent;\n              console.log(res);\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    },\n    updatedBurger: function updatedBurger(event, id) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var option, dataJson, req, res;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              option = event.target.value;\n              dataJson = JSON.stringify({\n                status: option\n              });\n              _context5.next = 4;\n              return fetch(\"http://localhost:3000/burgers/\".concat(id), {\n                method: \"PATCH\",\n                headers: {\n                  \"content-type\": \"application/json\"\n                },\n                body: dataJson\n              });\n            case 4:\n              req = _context5.sent;\n              _context5.next = 7;\n              return req.json();\n            case 7:\n              res = _context5.sent;\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.getPedidos();\n  }\n};","map":{"version":3,"names":["name","data","burgers","burger_id","status","ingredientes","paes","id","tipo","carnes","methods","getPedidos","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","req","wrap","_callee$","_context","prev","next","fetch","sent","json","getStatus","stop","_this2","_callee2","_callee2$","_context2","deleteBurger","_this3","_callee3","res","_callee3$","_context3","concat","method","updateBurger","event","_callee4","option","dataJson","_callee4$","_context4","target","value","JSON","stringify","headers","body","console","log","updatedBurger","_callee5","_callee5$","_context5","mounted"],"sources":["C:\\xampp\\htdocs\\build_your_burger\\src\\components\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div id = \"burger-table\" v-if = \"burgers\">\r\n    <div>\r\n      <div id = \"burger-table-heading\">\r\n        <div class = \"order-id\">#:</div>\r\n        <div>Cliente:</div>\r\n        <div>Pão:</div>\r\n        <div>Carne:</div>\r\n        <div>Opcionais:</div>\r\n        <div>Ações:</div>\r\n      </div>\r\n    </div>\r\n    <div id = \"burger-table-rows\">\r\n      <div class = \"burger-table-row\" v-for = \"burger in burgers\" :key = \"burger.id\"> \r\n        <div class = \"order-number\">{{ burger.id }}</div>\r\n        <div>{{ burger.nome }}</div>\r\n        <div>{{ burger.pao   }}</div>\r\n        <div>{{ burger.carne }}</div>\r\n        <div>\r\n          <ul v-for = \"(opcional, index) in burger.opcionais\" :key = \"index\">\r\n            <li>{{ opcional }}</li>\r\n          </ul> \r\n        </div>\r\n        <div>\r\n          <select name = \"status\" class = \"status\" @change = \"updateBurger($event, burger.id)\">\r\n            <option :value = \"s.tipo\" v-for = \"s in status\" :key = \"s.id\" :selected = \"burger.status  == s.tipo\">\r\n              {{ s.tipo }}\r\n            </option>\r\n          </select>\r\n          <button class = \"delete-btn\" @click = \"deleteBurger(burger.id)\">Cancelar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n<script>\r\n  export default {\r\n    name: \"Dashboard\",\r\n    data() {\r\n      return {\r\n        burgers: null,\r\n        burger_id: null,\r\n        status: [],\r\n      ingredientes: {\r\n        paes: [\r\n          { id: 1, tipo: \"Italiano Branco\" },\r\n          { id: 2, tipo: \"3 Queijos\" },\r\n          { id: 3, tipo: \"Parmesão e Orégano\" },\r\n          { id: 4, tipo: \"Integral\" }\r\n        ],\r\n        carnes: [\r\n          { id: 1, tipo: \"Maminha\" },\r\n          { id: 2, tipo: \"Alcatra\" },\r\n          { id: 3, tipo: \"Picanha\" },\r\n          { id: 4, tipo: \"Veggie burger\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n\r\n    methods: {\r\n      async getPedidos() {\r\n        const req = await fetch('http://localhost:3000/burgers');\r\n\r\n        const data = await req.json();  \r\n\r\n        this.burgers = data;\r\n\r\n        this.getStatus();\r\n\r\n      }, \r\n      async getStatus() {\r\n\r\n        const req = await fetch('http://localhost:3000/status')\r\n\r\n        const data = await req.json()\r\n\r\n        this.status = data;\r\n\r\n      },\r\n    \r\n      async deleteBurger(id) {\r\n\r\n        const req = await fetch(`http://localhost:3000/burgers/${id}`, {\r\n          method: \"DELETE\"\r\n        });\r\n\r\n        const res = await req.json();\r\n\r\n        this.getPedidos();\r\n\r\n      },\r\n      async updateBurger(event, id) {\r\n\r\n        const option = event.target.value;\r\n\r\n        const dataJson = JSON.stringify({status: option});\r\n\r\n        const req = await fetch(`http://localhost:3000/burgers/${id}`, {\r\n          method: \"PATCH\",\r\n          headers: { \"Content-Type\" : \"application/json\" },\r\n          body: dataJson\r\n        });\r\n\r\n        const res = await req.json()\r\n\r\n        console.log(res)\r\n\r\n      },\r\n      async updatedBurger(event, id) {\r\n        const option = event.target.value;\r\n\r\n        const dataJson = JSON.stringify({ status:option });\r\n\r\n        const req = await fetch(`http://localhost:3000/burgers/${id}`, {\r\n          method: \"PATCH\",\r\n          headers: {\"content-type\": \"application/json\"},\r\n          body: dataJson\r\n        });\r\n\r\n        const res = await req.json();\r\n      }\r\n    },\r\n    mounted () {\r\n    this.getPedidos();\r\n    }\r\n  }\r\n  \r\n</script>\r\n\r\n<style scoped>\r\n  #burger-table {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  #burger-table-heading,\r\n  #burger-table-rows,\r\n  .burger-table-row {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  #burger-table-heading {\r\n    font-weight: bold;\r\n    padding: 12px;\r\n    border-bottom: 3px solid #333;\r\n  }\r\n\r\n  .burger-table-row {\r\n    width: 100%;\r\n    padding: 12px;\r\n    border-bottom: 1px solid #CCC;\r\n  }\r\n\r\n  #burger-table-heading div,\r\n  .burger-table-row div {\r\n    width: 19%;\r\n  }\r\n\r\n  #burger-table-heading .order-id,\r\n  .burger-table-row .order-number {\r\n    width: 5%;\r\n  }\r\n\r\n  select {\r\n    padding: 12px 6px;\r\n    margin-right: 12px;\r\n  }\r\n\r\n  .delete-btn {\r\n    background-color: #222;\r\n    color:#fcba03;\r\n    font-weight: bold;\r\n    border: 2px solid #222;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    margin: 0 auto;\r\n    cursor: pointer;\r\n    transition: .5s;\r\n  }\r\n  \r\n  .delete-btn:hover {\r\n    background-color: transparent;\r\n    color: #222;\r\n  }\r\n  \r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}